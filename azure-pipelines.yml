# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: 7.2
  # the name of the service connection that you created above
  serviceConnectionToAzure: cx-to-myapp-rg
  # the name of your web app here is the same one you used above
  # when you created the web app using the Azure CLI
  appName: myFLApp
  resourceGroupName: myapp-rg
  slotName: staging
  serviceConnection: "https://hooks.slack.com/services/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" 

steps:
- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'

- script: composer install --no-interaction --prefer-dist
  displayName: 'composer install'

- task: ArchiveFiles@1
  displayName: Archive files
  inputs:
    rootFolder: $(System.DefaultWorkingDirectory)
    includeRootFolder: false
    archiveType: zip

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)

#- task: AzureWebApp@1
#  displayName: Azure Web App Deploy
#  inputs:
#    azureSubscription: $(serviceConnectionToAzure)
#    appType: webAppLinux
#    appName: $(appName)
#    package: $(build.artifactstagingdirectory)/**/*.zip

- task: AzureWebApp@1
  displayName: Azure Web App Deploy -staging
  inputs:
    azureSubscription: $(serviceConnectionToAzure)
    appType: webAppLinux
    appName: $(appName)
    deployToSlotOrASE: true
    resourceGroupName: $(resourceGroupName)
    slotName: $(slotName)
    package: $(build.artifactstagingdirectory)/**/*.zip

#- task: AzureAppServiceManage@0
#  displayName: Azure Web App Swap staging into production
#  inputs:
#    azureSubscription: $(serviceConnectionToAzure)
#    webAppName: $(appName)
#    action: 'Swap Slots'    
#    resourceGroupName: $(resourceGroupName)
#    sourceSlot: $(slotName)
#    swapWithProduction: true

- task: InvokeRESTAPI@1
  inputs:
    connectionType: 'connectedServiceName'
    serviceConnection: $(serviceConnection) 
    method: 'POST'
    headers: '{Content-Type:application/json}'
    body: '{"text": "Successful deploy of *streamfizz-api*", "type": "mrkdwn"}'
    waitForCompletion: 'false'
    #successCriteria: # Optional